<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="access_beta" xml:space="preserve">
    <value>Accedi a versioni BETA di EDDI</value>
  </data>
  <data name="EDDI_status_label" xml:space="preserve">
    <value>Situazione di EDDI: </value>
  </data>
  <data name="paragraph_0" xml:space="preserve">
    <value>presenta diverse caratteristiche che possono essere configurate separatamente. Ci sono tre diversi tipi di oggetti.</value>
  </data>
  <data name="paragraph_1" xml:space="preserve">
    <value>Il primo gruppo riceve e gestisce le informazioni di base utilizzate da EDDI. Le schede relative sono: i 'Dettagli relativi al Comandante', la 'Chiave API di Frontier' e la 'Sintesi Vocale'. Occorre aprire ognuna di queste schede e configurarla così che EDDI abbia accesso completo alle informazioni di Elite: Dangerous.</value>
  </data>
  <data name="paragraph_2" xml:space="preserve">
    <value>Il secondo gruppo riceve informazioni riguardanti gli eventi. Le schede di questo gruppo sono riconoscibili in quanto terminano con 'Monitor'. Esse ricevono dati ed eventi da diverse sorgenti e richiedono una configurazione minima ma necessaria prima di poter funzionare.</value>
  </data>
  <data name="paragraph_3" xml:space="preserve">
    <value>Il terzo gruppo reagisce agli eventi. Ne fanno parte le schede che contengono la parola 'Assistente'. Queste ultime presentano svariati livelli di configurazione ma sono già funzionanti di default.</value>
  </data>
  <data name="paragraph_4" xml:space="preserve">
    <value>Puoi informarti meglio su come EDDI funziona sul</value>
  </data>
  <data name="report_issue" xml:space="preserve">
    <value>Riporta un problema</value>
  </data>
  <data name="troubleshoot_common_issues" xml:space="preserve">
    <value>Risoluzione dei Problemi più comuni</value>
    <comment>A hyperlink to the troubleshooting URL (in english)</comment>
  </data>
  <data name="verbose_logging_checkbox" xml:space="preserve">
    <value>Abilita connessione dettagliata (solo nel caso in cui questa sia stata richiesta dagli sviluppatori di EDDI)</value>
  </data>
  <data name="verbose_logging_desc" xml:space="preserve">
    <value>Se la connessione dettagliata è abilitata verrà creato sul desktop un archivio .zip della connessione. questo archivio andrà incollato nel rapporto di problema su GitHub. Tale archivio non contiene alcuna informazione che consenta l'identificazione personale.</value>
  </data>
  <data name="version_hyperlink" xml:space="preserve">
    <value>Versione:</value>
  </data>
  <data name="wiki_hyperlink" xml:space="preserve">
    <value>progetto Wiki</value>
  </data>
  <data name="choose_lang_label" xml:space="preserve">
    <value>Seleziona la lingua di EDDI (richiede il riavvio dell'applicazione):</value>
  </data>
  <data name="tab_frontier_desc" xml:space="preserve">
    <value>Frontier ha una chiave API che permette ad EDDI di ricevere informazioni riguardanti la tua nave, il mercato della stazione corrente e numerosi altri dati. Questi dati non vengono messi a disposizione altrove. Se si desidera che EDDI ottenga tali informazioni è necessario cliccare sul bottone 'Login' e concedere ad EDDI l'autorizzazione ad accedere a questi dati sui server di Frontier.</value>
  </data>
  <data name="tab_frontier_header" xml:space="preserve">
    <value>Chiave API di Frontier</value>
  </data>
  <data name="tab_frontier_reset_desc" xml:space="preserve">
    <value>Se si riscontrassero problemi con la connessione è possibile reimpostarla e riconnettersi nuovamente. Questo dovrebbe eliminare tali problemi.</value>
  </data>
  <data name="tab_tts_desc" xml:space="preserve">
    <value>EDDI utilizza il proprio sintetizzatore vocale che processa la voce rispettando determinate caratteristiche come i danni patiti dalla nave in uso al momento e la dimensione della sua cabina di guida. Qui è possibile modificare i vari parametri vocali.</value>
  </data>
  <data name="tab_tts_distort_label" xml:space="preserve">
    <value>Degrada la voce in base ai danni subiti dalla nave:</value>
  </data>
  <data name="tab_tts_header" xml:space="preserve">
    <value>Sintesi vocale</value>
  </data>
  
  
  
  
  
  
  <data name="tab_tts_voice_label" xml:space="preserve">
    <value>Voce:</value>
  </data>
  
  
  <data name="reset_button" xml:space="preserve">
    <value>Resetta</value>
  </data>
  
  
  
  
  
  
  
  <data name="tab_commander_gender_f" xml:space="preserve">
    <value>Femminile</value>
  </data>
  <data name="tab_commander_gender_m" xml:space="preserve">
    <value>Maschile</value>
  </data>
  <data name="tab_commander_gender_n" xml:space="preserve">
    <value>Nessuno</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  <data name="no_station" xml:space="preserve">
    <value>Nessuna stazione</value>
  </data>
</root>
