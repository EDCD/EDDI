<UserControl x:Class="EddiMaterialMonitor.ConfigurationWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EddiMaterialMonitor"
             xmlns:resx="clr-namespace:EddiMaterialMonitor.Properties"
             xmlns:utility="clr-namespace:Utilities;assembly=Utilities"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800">
    <DockPanel LastChildFill="True" Background="{StaticResource NeutralBackgroundBrush}" Margin="0,5">
        <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="5,0" Text="{x:Static resx:MaterialMonitor.p1}"/>
        <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin ="5" Text="{x:Static resx:MaterialMonitor.p2}"/>
        <UniformGrid DockPanel.Dock="Bottom" Rows="1" Columns="2" Margin="240,5">
            <Button VerticalAlignment="Center" HorizontalAlignment="Center" Click="setDestination" Content="{x:Static resx:MaterialMonitor.set_dest_button}" />
            <Button VerticalAlignment="Center" HorizontalAlignment="Center" Click="cancelDestination" Content="{x:Static resx:MaterialMonitor.cancel_dest_button}" />
        </UniformGrid>
        <UniformGrid DockPanel.Dock="Bottom" Rows="1" Columns="5" Margin="0,5">
            <Button HorizontalAlignment="Center" Click="findEncoded" Content="{x:Static resx:MaterialMonitor.find_encoded_button}" />
            <Button HorizontalAlignment="Center" Click="findGuardian" Content="{x:Static resx:MaterialMonitor.find_guardian_button}" />
            <Button HorizontalAlignment="Center" Click="findHuman" Content="{x:Static resx:MaterialMonitor.find_human_button}" />
            <Button HorizontalAlignment="Center" Click="findManufactured" Content="{x:Static resx:MaterialMonitor.find_manufactured_button}" />
            <Button HorizontalAlignment="Center" Click="findRaw" Content="{x:Static resx:MaterialMonitor.find_raw_button}" />
        </UniformGrid>
        <Grid DockPanel.Dock="Bottom" Margin="0,5" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Label x:Name ="maxStationDistanceLabel" Grid.Row="0" Grid.Column="0" Margin="0,5" VerticalContentAlignment="Center" Content="{x:Static resx:MaterialMonitor.tab_station_distance}"/>
            <TextBox x:Name="maxStationDistanceInt" Grid.Row="0" Grid.Column="1" Margin="0,5"
                     PreviewTextInput="EnsureValidInteger"
                     KeyDown="maxStationDistance_KeyDown"
                     LostFocus="maxStationDistance_LostFocus"
                     TextAlignment="Center"
                     VerticalContentAlignment="Center" Height="25" Width="60"/>
            <TextBlock Grid.Row="1" Grid.Column="2" Margin="10,0" TextWrapping="Wrap" Text="{x:Static resx:MaterialMonitor.p3}" VerticalAlignment="Center"/>
        </Grid>
        <DataGrid Margin="0,5" AutoGenerateColumns="False" x:Name="materialsData" CanUserAddRows="false" CanUserDeleteRows="False" TargetUpdated="materialsUpdated">
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static resx:MaterialMonitor.name_header}" Width="*" IsReadOnly="True" Binding="{Binding Path=material}"></DataGridTextColumn>
                <DataGridTextColumn Header="{x:Static resx:MaterialMonitor.type_header}" Width="100" IsReadOnly="True" Binding="{Binding Path=Category}"></DataGridTextColumn>
                <utility:DataGridNumericColumn Header="{x:Static resx:MaterialMonitor.inventory_header}" IsReadOnly="True" Binding="{Binding Path=amount}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Right" />
                            <Setter Property="Margin" Value="5, 0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </utility:DataGridNumericColumn>
                <utility:DataGridNumericColumn Header="{x:Static resx:MaterialMonitor.min_header}" Binding="{Binding Path=minimum, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, TargetNullValue={x:Static System:String.Empty}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Right" />
                            <Setter Property="Margin" Value="5, 0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </utility:DataGridNumericColumn>
                <utility:DataGridNumericColumn Header="{x:Static resx:MaterialMonitor.desired_header}" Binding="{Binding Path=desired, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, TargetNullValue={x:Static System:String.Empty}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Right" />
                            <Setter Property="Margin" Value="5, 0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>

                </utility:DataGridNumericColumn>
                <utility:DataGridNumericColumn Header="{x:Static resx:MaterialMonitor.max_header}" Binding="{Binding Path=maximum, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, TargetNullValue={x:Static System:String.Empty}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Right" />
                            <Setter Property="Margin" Value="5, 0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </utility:DataGridNumericColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
