<UserControl x:Class="EddiSpeechResponder.ConfigurationWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:EddiSpeechResponder"
             xmlns:resx="clr-namespace:EddiSpeechResponder.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.DataContext>
        <local:SpeechResponder/>
    </UserControl.DataContext>
    <DockPanel LastChildFill="True" Background="#FFE5E5E5" Margin="-10">
        <Grid DockPanel.Dock="Top" Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="285"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Grid.Column="0" DockPanel.Dock="Top" >
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <TextBlock Margin="5" TextWrapping="Wrap" Text="{x:Static resx:SpeechResponder.subs}" />
                    <CheckBox x:Name="subtitlesCheckbox" VerticalAlignment="Center" Margin="5, 0" Checked="subtitlesEnabled" Unchecked="subtitlesDisabled"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" >
                    <TextBlock Margin="5" TextWrapping="Wrap" Text="{x:Static resx:SpeechResponder.subs_only}"/>
                    <CheckBox x:Name="subtitlesOnlyCheckbox" Margin="0" VerticalAlignment="Center" Checked="subtitlesOnlyEnabled" Unchecked="subtitlesOnlyDisabled"/>
                </StackPanel>
            </StackPanel>
            <RichTextBox x:Name="speechResponderHelp" DockPanel.Dock="Left" Grid.Column="1" Width="Auto" Margin="5"  IsReadOnly="True" IsDocumentEnabled="True" Background="#FFE5E5E5" BorderThickness="0">
                <FlowDocument Background="#FFE5E5E5">
                    <Paragraph>
                        <TextBlock TextWrapping="Wrap">
                            <Run Text="{x:Static resx:SpeechResponder.speechResponderHelp}"/>
                            <Hyperlink Click="SpeechResponderHelp_Click">
                                <Run Text="{x:Static resx:SpeechResponder.speechResponderHelpHere}"/>
                            </Hyperlink>
                        </TextBlock>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
        </Grid>
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="5, 0">
            <TextBlock VerticalAlignment="Center" Text="{x:Static resx:SpeechResponder.active_personality}" />
            <ComboBox 
                x:Name="personalityComboBox"
                Margin="5,0"
                ItemsSource="{Binding Personalities, NotifyOnSourceUpdated=True, Mode=OneWay, BindsDirectlyToSource=True}" 
                SelectedItem="{Binding CurrentPersonality, NotifyOnSourceUpdated=True, Mode=TwoWay, BindsDirectlyToSource=True}"
                DisplayMemberPath="Name" 
                IsSynchronizedWithCurrentItem="True"
                >
            </ComboBox>
            <TextBlock 
                x:Name="personalityDescription"
                DockPanel.Dock="Top" 
                TextWrapping="Wrap" 
                VerticalAlignment="Center"
                Text="{Binding ElementName=personalityComboBox, Path=DataContext.CurrentPersonality.Description, Mode=OneWay}">
            </TextBlock>
        </StackPanel>
        <DockPanel HorizontalAlignment="Stretch" DockPanel.Dock="Bottom" Margin="0, 0, 5, 0">
            <Label x:Name ="searchLabel" VerticalContentAlignment="Center" Content="{x:Static resx:SpeechResponder.search_filter}" />
            <TextBox x:Name ="searchFilterText" VerticalAlignment="Center" VerticalContentAlignment="Center" Height="25" Width="Auto" MinWidth="100" TextChanged="SearchFilterText_OnTextChanged"/>
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button 
                    x:Name="copyPersonalityButton"
                    Margin="10" 
                    HorizontalAlignment="Center" 
                    Grid.Column="0" 
                    Click="copyPersonalityClicked" 
                    Content="{x:Static resx:SpeechResponder.button_copy}"/>
                <Button 
                    x:Name="newPersonalityButton"
                    Margin="10" 
                    HorizontalAlignment="Center" 
                    Grid.Column="1" 
                    Click="newScriptClicked" 
                    Content="{x:Static resx:SpeechResponder.button_new}"
                    >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Visibility"  Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=personalityComboBox, Path=DataContext.CurrentPersonality.IsCustom, Mode=OneWay}" Value="False">
                                    <Setter Property="Visibility"  Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button 
                    x:Name="deletePersonalityButton"
                    Margin="10" 
                    HorizontalAlignment="Center" 
                    Grid.Column="2" 
                    Click="deletePersonalityClicked" 
                    IsEnabled="{Binding ElementName=personalityComboBox, Path=DataContext.CurrentPersonality.IsCustom, Mode=OneWay}" 
                    Content="{x:Static resx:SpeechResponder.button_delete}"
                    >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Visibility"  Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=personalityComboBox, Path=DataContext.CurrentPersonality.IsCustom, Mode=OneWay}" Value="False">
                                    <Setter Property="Visibility"  Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBlock 
                    x:Name="defaultText" 
                    VerticalAlignment="Top" 
                    HorizontalAlignment="Left" 
                    Grid.Column="1" 
                    Grid.ColumnSpan="2" 
                    TextWrapping="Wrap" 
                    Width="Auto" 
                    Margin="10, 0" 
                    Text="{x:Static resx:SpeechResponder.default_is_read_only}" FontWeight="Bold" FontStyle="Italic" FontSize="13" 
                    >
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility"  Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=personalityComboBox, Path=DataContext.CurrentPersonality.IsCustom, Mode=OneWay}" Value="True">
                                    <Setter Property="Visibility"  Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DockPanel>
        <DataGrid 
            Margin="0,5" 
            IsReadOnly="True" 
            AutoGenerateColumns="False" 
            x:Name="scriptsData" 
            CanUserAddRows="false" 
            ItemsSource="{Binding ScriptsView, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
            HeadersVisibility="Column">
            <DataGrid.Resources>
                <ContextMenu x:Key="HeaderEnableAllContextMenu" DisplayMemberPath="Header">
                    <MenuItem Header="{x:Static resx:SpeechResponder.context_menu_enable_all}" Click="EnableAll_Clicked"/>
                    <MenuItem Header="{x:Static resx:SpeechResponder.context_menu_disable_all}" Click="DisableAll_Clicked"/>
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn 
                    Header="{x:Static resx:SpeechResponder.header_name}" 
                    CanUserSort="True" 
                    SortMemberPath="Name"
                    SortDirection="Ascending">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <TextBlock Text="{Binding Path=Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn 
                    Header="{x:Static resx:SpeechResponder.header_enabled}" 
                    CanUserSort="True" 
                    SortMemberPath="Enabled"
                    >
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ContextMenu" Value="{DynamicResource HeaderEnableAllContextMenu}"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <Border IsEnabled="{Binding Path= Responder}">
                                <CheckBox 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    IsChecked="{Binding Path=Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    IsEnabled="{Binding Path=PersonalityIsCustom}" 
                                    Checked="eddiScriptsEnabledUpdated"
                                    Unchecked="eddiScriptsEnabledUpdated"
                                    />
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static resx:SpeechResponder.header_priority}" CanUserSort="True" SortMemberPath="Value.Priority">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <ComboBox 
                                SelectedValue="{Binding Path=Priority, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                                ItemsSource="{Binding Priorities, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                SelectionChanged="eddiScriptsPriorityUpdated"
                                >
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="Opacity"  Value="1" />
                                        <Setter Property="IsEnabled"  Value="{Binding Path=Responder}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Responder}" Value="False">
                                                <Setter Property="Opacity"  Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=PersonalityIsCustom}" Value="False">
                                                <Setter Property="IsEnabled"  Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static resx:SpeechResponder.header_description}" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <TextBlock Text="{Binding Path=Description}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <Button IsEnabled="{Binding Path=HasValue}" Click="testScript" Content="{x:Static resx:SpeechResponder.test_script}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <Button IsEnabled="{Binding Path=HasValue}" Click="viewScript" Content="{x:Static resx:SpeechResponder.view_script}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <Button 
                                IsEnabled="{Binding Path=PersonalityIsCustom}" 
                                Click="editScript" 
                                Content="{x:Static resx:SpeechResponder.edit_script}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:Script}">
                            <Button Click="resetOrDeleteScript">
                                <Button.Resources>
                                    <local:BooleanAndConverter x:Key="booleanAndConverter" />
                                </Button.Resources>
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource booleanAndConverter }">
                                        <Binding Path="PersonalityIsCustom"/>
                                        <Binding Path="IsResettableOrDeletable"/>
                                    </MultiBinding>
                                </Button.IsEnabled>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Content" Value="{x:Static resx:SpeechResponder.delete_script}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsResettable}" Value="True">
                                                <Setter Property="Content" Value="{x:Static resx:SpeechResponder.reset_script}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>