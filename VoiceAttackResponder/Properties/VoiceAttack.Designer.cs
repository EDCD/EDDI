//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EddiVoiceAttackResponder.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class VoiceAttack {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VoiceAttack() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EddiVoiceAttackResponder.Properties.VoiceAttack", typeof(VoiceAttack).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A responder that generates a large number of variables within VoiceAttack as well as triggering user-defined actions..
        /// </summary>
        public static string desc {
            get {
                return ResourceManager.GetString("desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VoiceAttack Responder.
        /// </summary>
        public static string name {
            get {
                return ResourceManager.GetString("name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To integrate EDDI with VoiceAttack EDDI needs to be installed within VoiceAttack&apos;s &apos;Apps&apos; directory. The default path for this is &apos;C:\Program Files (x86)\VoiceAttack\Apps&apos;, and is where EDDI will be installed by default..
        /// </summary>
        public static string p1 {
            get {
                return ResourceManager.GetString("p1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EDDI will only work with versions of VoiceAttack 1.5.12.22 and higher. Note that this a beta release..
        /// </summary>
        public static string p2 {
            get {
                return ResourceManager.GetString("p2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once VoiceAttack is installed you will need to enable plugin support. To do so you must click on the Settings icon (a spanner) in the bottom-right corner of the VoiceAttack window and check the &apos;Enable plugin support&apos; option and restart VoiceAttack. You should see a message in the VoiceAttack window along the lines of &apos;Plugin EDDI 2.0.0 initialized&apos;..
        /// </summary>
        public static string p3 {
            get {
                return ResourceManager.GetString("p3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At this point you can integrate EDDI&apos;s variables with your own VoiceAttack scripts. For example, your commander&apos;s name is stored in the &apos;Name&apos; text variable so to access it you just use &apos;{TXT:Name}&apos; in your own commands. There are variables for your commander, your ships, the current star system and station you are at, and more. A full list of variables is available .
        /// </summary>
        public static string p4 {
            get {
                return ResourceManager.GetString("p4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to on the main EDDI site.
        /// </summary>
        public static string p4_link {
            get {
                return ResourceManager.GetString("p4_link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to writing scripts that you trigger with voice or keyboard actions you can also write scripts that trigger on events that occur within Elite. For example, if you wanted to trigger a script every time the &apos;Docked&apos; event occurs then you would write a script called &apos;((EDDI docked))&apos; (note the double brackets around the name to avoid it being called accidentally, and the lower cased &apos;d&apos; in docked). A full list of events is also available .
        /// </summary>
        public static string p5 {
            get {
                return ResourceManager.GetString("p5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to on the main EDDI site.
        /// </summary>
        public static string p5_link {
            get {
                return ResourceManager.GetString("p5_link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please shut down VoiceAttack and run Eddi standalone to upgrade..
        /// </summary>
        public static string run_eddi_standalone {
            get {
                return ResourceManager.GetString("run_eddi_standalone", resourceCulture);
            }
        }
    }
}
