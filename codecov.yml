codecov:
  branch: develop
  token: c0cc9048-1cdc-464b-b2fa-dac79464e1c4
  notify: 
    require_ci_to_pass: no

coverage:
  precision: 2
  round: down 
  range: "70...100"
  status:                          # this controls whether a pull request will be blocked by a decrease in coverage
    project:
      default:
        # threshold: 1%            # allows coverage to drop by up to the percent noted and still post a success status
        informational: true        # If true is specified the resulting status will pass no matter what the coverage is or what other settings are specified
    patch: 
      default:
        # threshold: 1%            # allows coverage to drop by up to the percent noted and still post a success status
        informational: true        # If true is specified the resulting status will pass no matter what the coverage is or what other settings are specified
    changes: 
      default:
        # threshold: 1%            # allows coverage to drop by up to the percent noted and still post a success status
        informational: true        # If true is specified the resulting status will pass no matter what the coverage is or what other settings are specified

parsers:
  gcov:
    branch_detection:
      conditional: yes
      loop: yes
      method: no
      macro: no

comment: false                     # if top level key is false, suppresses all comments
#  layout: "header, flags, files"
#  behavior: default
#  require_changes: true           # if true, suppresses comment when coverage is unchanged

# Available parameters:

# codecov:
#   token: uuid  # Your private repository token
#   url: "http"  # for Codecov Enterprise customers
#   slug: "owner/repo"  # for Codecov Enterprise customers
#   branch: master  # override the default branch
#   bot: username  # set user whom will be the consumer of oauth requests
#   ci:  # Custom CI domains if Codecov does not identify them automatically
#     - ci.domain.com
#     - !provider  # ignore these providers when checking if CI passed
#                  # ex. You may test on Travis, Circle, and AppVeyor, but only need
#                  # to check if Travis passes. Therefore add: !circle and !appveyor
#   notify: # ADVANCED USE ONLY
#     after_n_builds: null      # number of expected builds to recieve before sending notifications
#                               # after: check ci status unless disabled via require_ci_to_pass
#     require_ci_to_pass: yes   # yes: will delay sending notifications until all ci is finished
#                               # no: will send notifications without checking ci status and wait till "after_n_builds" are uploaded
#     countdown: null           # number of seconds to wait before first ci build check
#     delay: null               # number of seconds to wait between ci build checks

# coverage:
#   precision: 2  # 2 = xx.xx%, 0 = xx%
#   round: down|up|nearest # default down
#   range: 50...60 # default 70...90. red...green

#   notify:
#     irc:
#       default:
#         server: "chat.freenode.net"|encrypted
#         branches: null  # all branches by default
#         threshold: 1%
#         message: "Coverage {{changed}} for {{owner}}/{{repo}}"  # customize the message
#         flags: null
#         paths: null

#     slack:
#       default:
#         url: "http"|encrypted
#         threshold: 1%
#         branches: null  # all branches by default
#         message: "Coverage {{changed}} for {{owner}}/{{repo}}"  # customize the message
#         attachments: "sunburst, diff"
#         only_pulls: false
#         flags: null
#         paths: null

#     email:
#       default:
#         to:
#           - example@domain.com
#           - &author
#         threshold: 1%
#         only_pulls: false
#         layout: header, diff, trends
#         flags: null
#         paths: null

#     hipchat:
#       default:
#         url: "http"|encrypted
#         room: name|id
#         threshold: 1%
#         token: encrypted
#         branches: null  # all branches by default
#         notify: false  # if the hipchat message is silent or loud (default false)
#         message: "Coverage {{changed}} for {{owner}}/{{repo}}"  # customize the message
#         flags: null
#         paths: null

#     gitter:
#       url: "http"|encrypted
#       threshold: 1%
#       branches: null  # all branches by default
#       message: "Coverage {{changed}} for {{owner}}/{{repo}}"  # customize the message

#     webhooks:
#       _name_:
#         url: "http"|encrypted
#         threshold: 1%
#         branches: null  # all branches by default

#   status:
#     project:
#       default:
#         against: parent
#         target: auto
#         threshold: 1% # the amount that coverage can drop while still posting a success
#         branches:
#           - master
#         if_no_uploads: error
#         if_not_found: success
#         if_ci_failed: error
#         only_pulls: false
#         flags:
#           - integration
#         paths:
#           - folder

#     patch:
#       default:
#         against: parent
#         target: 80%
#         branches: null
#         if_no_uploads: success
#         if_not_found: success
#         if_ci_failed: error
#         only_pulls: false
#         flags:
#           - integration
#         paths:
#           - folder
    
#     changes:
#       default:
#         against: parent
#         branches: null
#         if_no_uploads: error
#         if_not_found: success
#         if_ci_failed: error
#         only_pulls: false
#         flags:
#           - integration
#         paths:
#           - folder

#   flags:
#     integration:
#       branches:
#         - master
#       ignore:
#         - app/ui

#   ignore: # files and folders for processing
#     - tests/*
#   
#   fixes:
#     - "old_path::new_path"

# comment:
#   layout: header, diff, trends, uncovered
#   branches: *
#   behavior: default   # default = posts once then update, posts new if delete
#                       # once = post once then updates
#                       # new = delete old, post new
#                       # spammy = post new
#   require_changes: no # whether codecov will post a comment requiring changes if a PR doesn't meet the minimum coverage threshold
